<<<<<<< HEAD
#apiVersion: traefik.io/v1alpha1
#kind: IngressRoute
#metadata:
#  name: video-ingress-route
#  namespace: apps
#  annotations: 
#    kubernetes.io/ingress.class: traefik
#spec:
#  entryPoints:
#    - websecure
#  routes:
#    - match: Host(`demo-video.anup.co.in`)
#      kind: Rule
#      services:
#        - name: video-svc
#          port: 3000
#      middlewares:
#        - name: default-headers
#          namespace: traefik
#  tls:
#    secretName: video-cert

apiVersion: networking.k8s.io/v1
kind: Ingress
=======
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
>>>>>>> f95cb942e10391765c67549e4294a578147a57fb
metadata:
  name: video-ingress
  namespace: apps
  annotations:
    kubernetes.io/ingress.class: traefik                            # Specify Traefik as the ingress class
    traefik.ingress.kubernetes.io/router.entrypoints: websecure     # Use the secure entrypoint
    traefik.ingress.kubernetes.io/router.middlewares: traefik/default-headers@kubernetescrd # Middleware reference
    cert-manager.io/cluster-issuer: letsencrypt                     # Use Cert-Manager's ClusterIssuer for TLS
spec:
  tls:
    - hosts:
        - demo-video.anup.co.in                                     # Hostname for TLS
      secretName: video-cert                                        # Secret to store the TLS certificate
  rules:
    - host: demo-video.anup.co.in                                   # Define the host for routing
      http:
        paths:
          - path: /
            pathType: Prefix                                        # Prefix-based path matching
            backend:
              service:
                name: video-svc                                     # Backend service name
                port:
                  number: 3000                                      # Backend service port
